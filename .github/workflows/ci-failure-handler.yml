name: CI Failure Handler
on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
  pull_request:
    types: [closed]

jobs:
  handle-failures:
    if: github.event.workflow_run.conclusion == 'failure'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Get PR information
        id: pr_info
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${context.payload.workflow_run.head_branch}`
            });
            
            if (pulls.length > 0) {
              const pr = pulls[0];
              core.setOutput('pr_number', pr.number);
              core.setOutput('pr_title', pr.title);
              return pr.number;
            }
            return null;
            
      - name: Check failure count
        id: failure_count
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = '${{ steps.pr_info.outputs.pr_number }}';
            if (!prNumber) return 0;
            
            // Get all workflow runs for this PR
            const { data: workflowRuns } = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: context.payload.workflow_run.head_branch,
              status: 'completed',
              conclusion: 'failure'
            });
            
            const failures = workflowRuns.workflow_runs.filter(run => 
              run.head_branch === context.payload.workflow_run.head_branch &&
              run.conclusion === 'failure'
            );
            
            core.setOutput('count', failures.length);
            return failures.length;
            
      - name: Add failure labels
        if: steps.failure_count.outputs.count >= 1
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = '${{ steps.pr_info.outputs.pr_number }}';
            const failureCount = parseInt('${{ steps.failure_count.outputs.count }}');
            
            if (!prNumber) return;
            
            let labels = ['ci-failure'];
            
            if (failureCount >= 3) {
              labels.push('human-fix-needed');
              labels.push('urgent');
            } else if (failureCount >= 2) {
              labels.push('needs-attention');
            }
            
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              labels: labels
            });
            
      - name: Create failure analysis comment
        if: steps.failure_count.outputs.count >= 3
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = '${{ steps.pr_info.outputs.pr_number }}';
            if (!prNumber) return;
            
            const failureCount = '${{ steps.failure_count.outputs.count }}';
            const workflowUrl = `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.payload.workflow_run.id}`;
            
            const commentBody = `
            ## 🚨 CI 실패 한계 도달
            
            **실패 횟수**: ${failureCount}회
            **상태**: 사람의 개입이 필요합니다
            
            ### 📋 다음 단계
            1. 🔍 [실패한 워크플로우 확인](${workflowUrl})
            2. 🐛 오류 원인 분석
            3. 🔧 수동으로 문제 해결
            4. ✅ 수정 후 라벨 제거
            
            ### 🤖 자동화 일시 중단
            - 추가 자동 개발 중단됨
            - \`human-fix-needed\` 라벨 제거 후 재개
            
            ---
            *🤖 이 댓글은 자동으로 생성되었습니다.*
            `;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: commentBody
            });
            
      - name: Block further automation
        if: steps.failure_count.outputs.count >= 3
        uses: actions/github-script@v7
        with:
          script: |
            // Create a file to indicate automation should be paused
            const fs = require('fs');
            const path = '.automation-blocked';
            
            const blockInfo = {
              reason: 'CI failures exceeded threshold',
              timestamp: new Date().toISOString(),
              pr_number: '${{ steps.pr_info.outputs.pr_number }}',
              failure_count: '${{ steps.failure_count.outputs.count }}'
            };
            
            fs.writeFileSync(path, JSON.stringify(blockInfo, null, 2));
            
            // Commit the block file
            const { execSync } = require('child_process');
            try {
              execSync('git config user.name "GitHub Actions"');
              execSync('git config user.email "actions@github.com"');
              execSync(`git add ${path}`);
              execSync('git commit -m "🚨 Block automation due to CI failures"');
              execSync('git push');
            } catch (error) {
              console.log('Could not commit block file:', error.message);
            }
            
  cleanup-on-success:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Remove failure labels on success
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${context.payload.workflow_run.head_branch}`
            });
            
            if (pulls.length > 0) {
              const pr = pulls[0];
              
              // Remove failure-related labels
              const labelsToRemove = ['ci-failure', 'needs-attention'];
              
              for (const label of labelsToRemove) {
                try {
                  await github.rest.issues.removeLabel({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: pr.number,
                    name: label
                  });
                } catch (error) {
                  // Label might not exist, ignore
                }
              }
            }
            
      - name: Remove automation block
        run: |
          if [ -f .automation-blocked ]; then
            rm .automation-blocked
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            git add .automation-blocked
            git commit -m "✅ Remove automation block - CI passing" || true
            git push || true
          fi