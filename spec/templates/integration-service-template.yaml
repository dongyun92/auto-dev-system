# Integration Service Template
# 외부 서비스와의 통합을 담당하는 서비스 (이메일, 결제, 알림 등)

name: "notification-integration"
description: "다중 채널 알림 시스템 (이메일, SMS, 푸시) 통합 서비스"
version: "1.0.0"
module_type: "integration"
priority: "medium"

# 기본 서비스들이 구현된 후 통합
depends_on:
  - "user-service"
  - "auth-service"

# 기술 스택
tech_stack:
  - "spring-boot"
  - "spring-integration"
  - "rabbitmq"
  - "redis"
  - "feign-client"
  - "resilience4j"  # Circuit breaker
  - "wiremock"      # 외부 API 테스트
  - "testcontainers"

# API 엔드포인트 정의
endpoints:
  - method: "POST"
    path: "/api/notifications/send"
    description: "단일 알림 전송"
    auth_required: true
    request_body:
      type: "object"
      required: ["recipient", "channel", "template", "data"]
      properties:
        recipient: { type: "string", description: "수신자 (이메일, 전화번호 등)" }
        channel: { type: "string", enum: ["email", "sms", "push"], description: "알림 채널" }
        template: { type: "string", description: "템플릿 ID" }
        data: { type: "object", description: "템플릿 변수 데이터" }
        priority: { type: "string", enum: ["low", "normal", "high"], default: "normal" }
        scheduledAt: { type: "string", format: "date-time", description: "예약 전송 시간" }
        
  - method: "POST"
    path: "/api/notifications/bulk"
    description: "대량 알림 전송"
    auth_required: true
    request_body:
      type: "object"
      required: ["notifications"]
      properties:
        notifications: { type: "array", items: { $ref: "#/components/schemas/Notification" } }
        
  - method: "GET"
    path: "/api/notifications/{id}/status"
    description: "알림 전송 상태 조회"
    auth_required: true
    
  - method: "POST"
    path: "/api/notifications/templates"
    description: "알림 템플릿 생성"
    auth_required: true
    request_body:
      type: "object"
      required: ["name", "channel", "subject", "content"]
      properties:
        name: { type: "string", description: "템플릿 이름" }
        channel: { type: "string", enum: ["email", "sms", "push"] }
        subject: { type: "string", description: "제목 (이메일, 푸시용)" }
        content: { type: "string", description: "내용 템플릿" }
        variables: { type: "array", items: { type: "string" }, description: "사용 가능한 변수 목록" }
        
  - method: "GET"
    path: "/api/notifications/templates"
    description: "알림 템플릿 목록 조회"
    auth_required: true

# 데이터베이스 스키마
database:
  tables:
    - name: "notification_templates"
      columns:
        - name: "id"
          type: "BIGSERIAL"
          primary_key: true
        - name: "name"
          type: "VARCHAR(100)"
          nullable: false
          unique: true
        - name: "channel"
          type: "VARCHAR(20)"
          nullable: false
        - name: "subject"
          type: "VARCHAR(255)"
          nullable: true
        - name: "content"
          type: "TEXT"
          nullable: false
        - name: "variables"
          type: "JSONB"
          nullable: true
        - name: "created_at"
          type: "TIMESTAMP WITH TIME ZONE"
          nullable: false
        - name: "updated_at"
          type: "TIMESTAMP WITH TIME ZONE"
          nullable: false
      indexes:
        - name: "idx_templates_name"
          columns: ["name"]
        - name: "idx_templates_channel"
          columns: ["channel"]
    
    - name: "notification_logs"
      columns:
        - name: "id"
          type: "BIGSERIAL"
          primary_key: true
        - name: "recipient"
          type: "VARCHAR(255)"
          nullable: false
        - name: "channel"
          type: "VARCHAR(20)"
          nullable: false
        - name: "template_id"
          type: "BIGINT"
          nullable: true
        - name: "subject"
          type: "VARCHAR(255)"
          nullable: true
        - name: "content"
          type: "TEXT"
          nullable: false
        - name: "status"
          type: "VARCHAR(20)"
          nullable: false
        - name: "error_message"
          type: "TEXT"
          nullable: true
        - name: "external_id"
          type: "VARCHAR(255)"
          nullable: true
        - name: "sent_at"
          type: "TIMESTAMP WITH TIME ZONE"
          nullable: true
        - name: "delivered_at"
          type: "TIMESTAMP WITH TIME ZONE"
          nullable: true
        - name: "created_at"
          type: "TIMESTAMP WITH TIME ZONE"
          nullable: false
      indexes:
        - name: "idx_logs_recipient"
          columns: ["recipient"]
        - name: "idx_logs_status"
          columns: ["status"]
        - name: "idx_logs_channel"
          columns: ["channel"]
        - name: "idx_logs_created"
          columns: ["created_at"]

# 외부 서비스 통합 설정
external_integrations:
  email:
    provider: "sendgrid"  # 또는 ses, mailgun
    retry_policy: "exponential_backoff"
    timeout: "30s"
    
  sms:
    provider: "twilio"   # 또는 aws-sns
    retry_policy: "exponential_backoff"
    timeout: "10s"
    
  push:
    provider: "firebase"  # 또는 apns
    retry_policy: "linear_backoff"
    timeout: "15s"

# 테스트 요구사항
tests:
  unit_test_coverage: 85
  integration_tests: true
  e2e_tests: true
  contract_tests: true  # 외부 API 계약 테스트
  test_data:
    - "mock-templates.json"
    - "test-notifications.json"
    - "external-api-mocks.json"

# 환경 설정
configuration:
  environment_variables:
    # 이메일 서비스 설정
    - name: "SENDGRID_API_KEY"
      description: "SendGrid API 키"
      required: true
      sensitive: true
    - name: "EMAIL_FROM_ADDRESS"
      description: "발신자 이메일 주소"
      required: true
    
    # SMS 서비스 설정
    - name: "TWILIO_ACCOUNT_SID"
      description: "Twilio Account SID"
      required: true
      sensitive: true
    - name: "TWILIO_AUTH_TOKEN"
      description: "Twilio Auth Token"
      required: true
      sensitive: true
    - name: "SMS_FROM_NUMBER"
      description: "발신자 전화번호"
      required: true
    
    # 푸시 알림 설정
    - name: "FIREBASE_SERVER_KEY"
      description: "Firebase Server Key"
      required: true
      sensitive: true
    
    # 큐 시스템 설정
    - name: "RABBITMQ_URL"
      description: "RabbitMQ 연결 URL"
      required: true
    
    # 캐시 설정
    - name: "REDIS_URL"
      description: "Redis 연결 URL"
      required: true

# 보안 설정
security:
  authentication: "jwt"
  authorization: ["USER", "ADMIN", "SERVICE"]
  sensitive_data: true
  encryption: true
  rate_limiting: true

# 성능 요구사항
performance:
  max_response_time: "500ms"
  throughput: "10000 notifications/min"
  memory_limit: "1GB"
  queue_size: "100000"

# 신뢰성 요구사항
reliability:
  circuit_breaker: true
  retry_mechanism: true
  dead_letter_queue: true
  message_durability: true
  delivery_guarantee: "at_least_once"

# 문서화
documentation:
  api_docs: true
  integration_guide: true
  troubleshooting_guide: true

# 배포 설정
deployment:
  docker: true
  kubernetes: true
  auto_scaling: true
  health_check:
    path: "/actuator/health"
    method: "GET"

# 모니터링
monitoring:
  metrics:
    - "notifications_sent_total"
    - "notifications_failed_total"
    - "delivery_rate"
    - "response_time_per_channel"
    - "queue_size"
    - "external_api_latency"
  logging:
    level: "INFO"
    format: "json"
  alerts:
    - "delivery_rate < 95%"
    - "queue_size > 50000"
    - "external_api_latency > 5s"
    - "error_rate > 2%"

# 메타데이터
metadata:
  author: "Auto Development System"
  created_date: "2025-06-23"
  tags: ["integration", "notifications", "email", "sms", "push", "messaging"]
  estimated_effort: "7-10 days"
